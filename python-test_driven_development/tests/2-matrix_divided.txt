Matrix Divided Function Test
============================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Regular test case with valid inputs
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test with matrix containing floats
>>> matrix = [
...     [1.5, 2.5, 3.5],
...     [4.5, 5.5, 6.5]
... ]
>>> matrix_divided(matrix, 2)
[[0.75, 1.25, 1.75], [2.25, 2.75, 3.25]]

# Test with a matrix where all elements are the same
>>> matrix = [
...     [4, 4, 4],
...     [4, 4, 4]
... ]
>>> matrix_divided(matrix, 2)
[[2.0, 2.0, 2.0], [2.0, 2.0, 2.0]]

# Test with a matrix containing negative numbers
>>> matrix = [
...     [-1, -2, -3],
...     [-4, -5, -6]
... ]
>>> matrix_divided(matrix, -2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Test with invalid matrix input (not a list of lists)
>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test with invalid row size
>>> matrix = [
...     [1, 2],
...     [3, 4, 5]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test with invalid div type
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, "2")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test with div as zero
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
